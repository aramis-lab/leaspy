test:
  image: "python:$VERSION"
  script:
    - python -V
    - pip install pipx
    - pipx ensurepath
    - source ~/.bashrc
    - pipx install poetry
    - which poetry
    - poetry install --with dev
    - pip freeze
    - pytest tests
    - coverage run -m pytest tests --junitxml=report.xml
    - coverage report
  parallel:
    matrix:
      - VERSION: ["3.9", "3.10", "3.11"]
  artifacts:
    when: always
    reports:
      junit: report.xml

docs-build:
  image: "python:3.11"
  script:
    - python -V
    - pip install pipx
    - pipx ensurepath
    - source ~/.bashrc
    - pipx install poetry
    - poetry install --with docs
    - sphinx-build docs/ docs/_build/html

release-pypi:
  image: "python:3.11"
  rules:
    - if: $CI_COMMIT_TAG
      when: always
  script:
    - python -V
    - pip install pipx
    - pipx ensurepath
    - source ~/.bashrc
    - pipx install hatch
    - hatch build
    - hatch publish -u __token__ -a $PYPI_TOKEN -n

